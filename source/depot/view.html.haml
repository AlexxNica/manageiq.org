---
page_classes: "depot depot-view"
---

:ruby
  depot_dir = "#{root}/source/depot"
  repo_dir = "#{depot_dir}/extension"
  extension_dir = "#{repo_dir}/#{extension_name}"

  require "#{depot_dir}/extensions-info.rb"

  extension = extensions_info[extension_name]

  begin
    content = Nokogiri::HTML markdown_to_html open("#{extension_dir}/content.md").read

    # Strip the H1 if it matches the extension name
    if content.css('h1').text.gsub(/[\W_\-]/, '').downcase == extension_name.gsub(/[\W_\-]/, '').downcase
      content.css('h1').remove
    end
  rescue # Just in case...
    content = 'No summary available.'
  end


-##########################

- if extension && extension['name']

  .row
    .col-sm-12

      .title
        %h2
          Extension:
          = extension['name']

        - if extension['version']
          .version= extension['version']

  .row

    .col-sm-6

      .author
        by
        = ([extension['author']] + extension['collaborator']).to_sentence

      .date
        Last updated:
        = pretty_date extension['date'].to_date

    .col-sm-6
      .tags= tags_list extension['tags'], '', '/depot/'

      .dependencies
        Requires:
        = extension['dependencies'].join(', ')

  -#.row
    .col-sm-12
      = extension['description']

  .row
    - scripts = Dir["#{extension_dir}/scripts/*"]

    - if scripts.count > 0
      .col-sm-6

        .scripts
          Scripts:
          %ul
            - scripts.each do |script|
              %li= link_to script.split('/').last, script.gsub(/.*depot\/ext/, '/depot/ext')

    :ruby
      versions = extension['miq_ver'] + ['bsomething']
      git = "git -C #{repo_dir}"
      original_commit = `#{git} log --oneline #{extension_dir} | tail -n 1 | cut -f1 -d ' '`
      branches = `#{git} branch --contains #{original_commit}`.split(/\W+/).reject{|x| x.empty?}
      branch_versions = branches & versions

    - if branch_versions.count > 0
      .col-sm-6
        .previous-versions
          Also available for previous ManageIQ releases:
          %ul
            - branch_versions.each do |ver|
              %li= link_to ver, extension['src_url'].gsub(/tree\/master/, "tree/#{ver}")

  %hr

  = content

  -#%pre= extension.to_yaml


- content_for :head do
  :sass

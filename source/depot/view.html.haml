---
page_classes: "depot depot-view"
---

:ruby
  # Repo-related directories
  depot_dir = "#{root}/source/depot"
  repo_dir = "#{depot_dir}/extension"
  extension_dir = "#{repo_dir}/#{extension_name}"

  # Common depot-related code
  require "#{depot_dir}/extensions-info.rb"
  extension = extensions_info[extension_name]

  # Git-related information
  git = "git -C #{repo_dir}"
  first_commit = `#{git} log --oneline #{extension_dir} | tail -n 1 | cut -f1 -d ' '`
  modified_time = IO.popen(%w[git log --pretty=format:%ai] + [extension_dir]).read.split(/\n/).first.to_time rescue nil

  # Content grabber
  begin
    content = Nokogiri::HTML markdown_to_html open("#{extension_dir}/content.md").read

    # Strip the H1 if it matches the extension name
    if content.css('h1').text.gsub(/[\W_\-]/, '').downcase == extension_name.gsub(/[\W_\-]/, '').downcase
      content.css('h1').remove
    end
  rescue # Just in case...
    content = 'No summary available.'
  end


-##########################

- if extension && extension['name']

  .extension
    .row
      .col-sm-12

        .title
          %h2
            Extension:
            = extension['name']

          - if extension['version']
            .version= extension['version']

    .row

      .left.col-sm-4
        .author= "by #{([extension['author']] + extension['collaborator']).to_sentence}"

      .center.col-sm-4
        - if extension['dependencies'].length > 0
          .dependencies
            Requires:
            = extension['dependencies'].join(', ')

      .right.col-sm-4
        .date
          Last updated:
          = pretty_date(modified_time || extension['date'])


    - if extension['description']
      .row
        .col-sm-12
          .description
            = extension['description']


    .row
      .col-sm-4
        .tags
          Tags:
          = tags_list extension['tags'], '', '/depot/'


      - scripts = Dir["#{extension_dir}/scripts/*"]
      .col-sm-4
        - if scripts.count > 0
          .scripts
            Scripts:
            %ul
              - scripts.each do |script|
                %li= link_to script.split('/').last, script.gsub(/.*depot\/ext/, '/depot/ext')

      :ruby
        versions = extension['miq_ver'] + ['bsomething']
        branches = `#{git} branch --contains #{first_commit}`.split(/\W+/).reject{|x| x.empty?}
        branch_versions = branches & versions

      - if branch_versions.count > 0
        .col-sm-4
          .previous-versions
            Also available for previous ManageIQ releases:
            %ul
              - branch_versions.each do |ver|
                %li= link_to ver, extension['src_url'].gsub(/tree\/master/, "tree/#{ver}")


    %hr

    = content

    -#%pre= extension.to_yaml


- content_for :head do
  :sass

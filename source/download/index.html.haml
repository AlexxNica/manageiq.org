---
page_classes: header-page download-page
---

%section.page-header
  .row
    %section.col-md-12
      :markdown
        ## Download and install ManageIQ

        Getting started with ManageIQ is as simple as following three
        steps. You'll be up and running in under 30 minutes.


%section.download-selection
  .row.text-center{:style => "padding-bottom:0"}
    %section.col-md-12
      %select{:id => "platform", :onchange => "downloadSelectionChanged()"}
        %option{:disabled => true, :selected => true} --Choose your platform--
        - data.deploy_types.each do |key, info|
          %option{:value => key, :data => info.slice("ext", "download_platform")}= info["name"]

      %select{:id => "release", :onchange => "downloadSelectionChanged()"}
        %option{:disabled => true, :selected => true} --Choose a release--
        - data.deploy_releases.each do |key, info|
          %option{:value => key, :data => info.slice("filename")}= info["name"]

      .release-warning{:hidden => true}
        %h1
        .alert.alert-warning
          %span.fa.fa-exclamation-triangle
          %strong
            Warning
          Things may be unstable, and may break. If you're looking for adventure,
          please proceed.

      :javascript
        function downloadSelectionChanged() {
          platform = $("#platform").val();
          release  = $("#release").val();

          if (release != null && platform != null) {
            if (release != "stable")
              $(".release-warning").show();
            else
              $(".release-warning").hide();

            dl_platform = $("#platform option:selected").attr("data-download-platform");
            filename = $("#release option:selected").attr("data-filename");
            ext = $("#platform option:selected").attr("data-ext");

            replace_html = $("#instructions-template-" + platform).
              html().
              replace(/!!build_url!!/g, build_url(dl_platform, filename, ext)).
              replace(/!!build_filename!!/g, build_filename(dl_platform, filename, ext)).
              replace(/!!docker_tag!!/g, docker_tag)

            $(".installation-steps").show();
            $("#installation-step1").html(replace_html);
          }
        }

        function build_url(platform, filename, ext) {
          return "http://manageiq.org/download/" + build_filename(platform, filename, ext);
        }

        function build_filename(platform, filename, ext) {
          return "manageiq-" + platform + "-" + filename + "." + ext;
        }

        function docker_tag() {
          if (release == "devel")
            return "latest";
          else
            return filename;
        }

%section.installation-steps{:hidden => true}
  .row{:style => "padding-top:0"}
    %section.col-md-12
      :markdown
        ### Step 1: **Download & deploy your appliance**

      %div#installation-step1

      %div#instructions-template-docker{:hidden => true}
        :markdown
          1.  Pull the ManageIQ docker image from Docker Hub and run:

              ~~~
              docker run --privileged -di -p 80:80 -p 443:443 docker.io/manageiq/manageiq:!!docker_tag!!
              ~~~

      %div#instructions-template-azure{:hidden => true}
        :markdown
          1.  Download the ManageIQ appliance for Azure [here](!!build_url!!).

          2.  In PowerShell prompt, log in to Azure Resource Manager using the cmdlet:

              ~~~powershell
              Login-AzureRmAccount
              ~~~

          3.  Upload the VHD file, make a copy of the VHD file and create a virtual
              machine. As shown in the example script below, you will first create a
              Resource Group through the Portal UI or Powershell. Additionally, create
              the storage container defined in "BlobDestinationContainer" in advance.

              Example script:

              ~~~powershell
              ## Upload image
              # Define the Source and Destination
              $ResourceGroupName = "test"
              $BlobNameSource = "!!build_filename!!"
              $BlobNameDest = "!!build_filename!!"
              $BlobSourceContainer = "templates"
              $BlobDestinationContainer = "vhds"
              $LocalImagePath = 'C:\temp\!!build_filename!!'

              $StorageAccountName = <yourStorageAccountNameHere>
              $StorageAccountKey = <yourStorageAccountKeyHere>

              # Upload VHD to a "templates" directory.
              Add-AzureRmVhd -ResourceGroupName $ResourceGroupName -Destination https://$StorageAccountName.blob.core.windows.net/$BlobSourceContainer/$BlobNameSource -LocalFilePath $LocalImagePath -NumberOfUploaderThreads 8

              # Copy the VHD to "live" directory
              $myStorage = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey
              $BlobResult = Start-AzureStorageBlobCopy -SrcBlob $BlobNameSource -SrcContainer $BlobSourceContainer -DestContainer $BlobDestinationContainer -DestBlob $BlobNameDest -Context $myStorage -DestContext $myStorage

              ## Create Virtual Machine
              $Location = "East US"
              $VMName = "azure-test-vm"
              $ComputerName = $VMName
              $OSDiskName = $VMName
              $deployName = $VMName
              $deploySize= "Standard_A3"

              # Setup Storage
              $StorageName = "test"
              $StorageType = "Standard_RAGRS"
              $StorageAccount = Get-AzureRmStorageAccount -ResourceGroupName $ResourceGroupName -Name $StorageName

              # Setup Network
              $InterfaceName = "test"
              $Subnet1Name = "default"
              $VNetName = "test1"
              $VNetAddressPrefix = "10.1.0.0/16"
              $VNetSubnetAddressPrefix = "10.1.0.0/24"
              $PIp = New-AzureRmPublicIpAddress -Name $InterfaceName -ResourceGroupName $ResourceGroupName -Location $Location -AllocationMethod Dynamic -Force
              $SubnetConfig = New-AzureRmVirtualNetworkSubnetConfig -Name $Subnet1Name -AddressPrefix $VNetSubnetAddressPrefix
              $VNet = New-AzureRmVirtualNetwork -Name $VNetName -ResourceGroupName $ResourceGroupName -Location $Location -AddressPrefix $VNetAddressPrefix -Subnet $SubnetConfig -Force
              $Interface = New-AzureRmNetworkInterface -Name $InterfaceName -ResourceGroupName $ResourceGroupName -Location $Location -SubnetId $VNet.Subnets[0].Id -PublicIpAddressId $PIp.Id -Force

              # Configure VM
              $VirtualMachine = New-AzureRmVMConfig -VMName $deployName -VMSize $deploySize
              $VirtualMachine = Add-AzureRmVMNetworkInterface -VM $VirtualMachine -Id $Interface.Id
              $OSDiskUri = $StorageAccount.PrimaryEndpoints.Blob.ToString() + $BlobDestinationContainer + "/" + $BlobNameDest
              $VirtualMachine = Set-AzureRmVMOSDisk -VM $VirtualMachine -Name $OSDiskName -VhdUri $OSDiskUri -CreateOption attach -Linux
              New-AzureRmVM -ResourceGroupName $ResourceGroupName -Location $Location -VM $VirtualMachine
              ~~~

      %div#instructions-template-hyperv{:hidden => true}
        :markdown
          1.  Download the ManageIQ appliance for SCVMM to the SCVMM server
              [here](!!build_url!!).

          2.  In the Library workspace of the VMM console, expand Library
              Servers, expand a library server, right-click a library share,
              and then click Explore. Then, copy the ManageIQ image to the share.

          3.  In the Library pane, expand Library Servers, right-click the
              library server or library share that you want to refresh, and then
              click Refresh.

          4.  In the Library workspace, with Library Servers expanded, navigate
              to the library server or library share that contains the file.

          5.  Right-click the file and then click Properties.

          6.  For Operating system, expand the list and select the operating
              system that has been placed on the virtual hard disk.

          7.  Optionally, for Virtualization platform, select the virtualization
              platform on which you will deploy virtual machines that use the
              file.

          8.  When you have updated the properties, click OK.

          9.  Now that the ManageIQ image is added to the library, select the
              image.

          10. Click on Create Virtual Machine.

          11. Enter the name of the Virtual Machine you're creating and click
              Next.

          12. Under Configure Hardware, choose the following:

                  Processors - 2
                  Memory - 4096 MB
                  Connected to a VM Network

          13. Click Next

          14. Select Place the Virtual Machine on a Host and click Next.

          15. Choose the Virtual Machine path for storing the virtual machine
              files or accept the default, then click Next.

          16. Select Always Turn on the Virtual Machine and click Next.

          17. Check the Start the Virtual Machine After Deploying It, and click
              Next.

          18. Select Create.

      %div#instructions-template-qemu{:hidden => true}
        :markdown
          1.  Download the ManageIQ appliance for OpenStack [here](!!build_url!!).
              This appliance works with generic QEmu/KVM and libvirt as well.

          2.  Create a new VM with virt-manager and select "Import existing disk image".
              ManageIQ needs a minimum of 6GB RAM and a 45GB persistent disk. The root password is 'smartvm'

      %div#instructions-template-openstack{:hidden => true}
        :markdown
          1.  Download ManageIQ directly to OpenStack by running
              this command:

              ~~~bash
              curl -O -L !!build_url!! && \
              glance image-create --name "!!build_filename!!" \
              --is-public True --disk-format qcow2 \
              --container-format=bare --file !!build_filename!!
              ~~~

          2.  Launch a new instance from the ManageIQ image. ManageIQ needs a
              minimum of 6GB RAM and a 45GB persistent disk, so choose or create
              an instance flavor accordingly.

      %div#instructions-template-ovirt{:hidden => true}
        %ol
          %li
            %p
              %a.download-link{:href => "!!build_url!!"}
                Download ManageIQ for oVirt
          %li
            %p
              When the file has finished downloading, upload it to
              an export domain on your oVirt instance by running the
              following command locally:

              :markdown
                ~~~bash
                engine-image-uploader -e $YOUR_EXPORT_DOMAIN --engine=$YOUR_ENGINE_HOST upload -v -m !!build_filename!!
                ~~~
          %li
            %p
              Navigate to the "Template Import" tab of your export
              domain in your oVirt admin console, and import the
              ManageIQ image template you uploaded.
          %li
            %p
              Create a new virtual machine from the ManageIQ
              template, and start the VM.

      %div#instructions-template-rhev{:hidden => true}
        %ol
          %li
            %p
              %a.download-link{:href => "!!build_url!!"}
                Download ManageIQ for Red Hat Enterprise Virtualization
          %li
            %p
              When the file has finished downloading, upload it to
              an export domain on your RHEV instance by running the
              following command locally:

              :markdown
                ~~~bash
                rhevm-image-uploader -e $YOUR_EXPORT_DOMAIN --engine=$YOUR_RHEVM_HOST upload -v -m !!build_filename!!
                ~~~
          %li
            %p
              Navigate to the "Template Import" tab of your export
              domain in your RHEV admin console, and import the
              ManageIQ image template you uploaded.
          %li
            %p
              Create a new virtual machine from the ManageIQ
              template, and start the VM. The root password is 'smartvm'

      %div#instructions-template-vsphere{:hidden => true}
        :markdown
          1.  From the vSphere client, click File → Deploy OVF Template
              (or Actions → Deploy OVF Template from the vSphere Web client).

          2.  Enter `!!build_url!!`
              in the URL field of the resulting dialog window, and select
              the location, host and storage you wish to use for the ManageIQ VM.

          3.  Check the box "Power on after deployment" to start the VM
              once the deployment is complete. The root password is 'smartvm'

      :markdown
        ### Step 2: **First connection and configuration**

        1.  Log into the ManageIQ dashboard by connecting to the new running VM
            with a web browser.
            The initial username and password is `admin`/`smartvm`.

        2.  There are a number of basic settings, located under
            "Configure → Configuration" in the web interface, or under
            "Advanced Settings" in the VM's console, that you may wish to
            change when starting ManageIQ for the first time. Among the
            most common are:

            * Time and date settings
            * DHCP configuration
            * Hostname
            * Admin password


        ### Step 3: **Add an infrastructure or cloud provider**

        Now that your ManageIQ Appliance is up and running, it's time to connect up
        with your Providers (Cloud or Infrastructure) and gather data about them.


  .row
    .col-md-6
      :markdown
        #### Discover a new infrastructure provider

        For Microsoft SCVMM, RHEV, oVirt, or vSphere

        1. Navigate to **Infrastructure** → **Providers**
        2. Click **Configuration** → **Discover Infrastructure Providers**,
        3. Select the **type**.
        4. Enter an IP Range.
        5. Click **Add**.

    .col-md-6
      :markdown
        #### Add a new cloud provider

        For OpenStack, Amazon EC2

        1. Navigate to **Clouds** → **Providers**
        2. Click **Configuration** → **Add a New Cloud Provider**
        3. Select the **type**.
        4. Enter required credentials.
        5. Click **Add**.


    .next-steps
      %hr

      :markdown

        ## What's next?


      .col-md-4
        :markdown
          ### Consult the docs

          * [Visit the **Documentation** section](/documentation/)
          * [Check out **Top Tasks**](/documentation/top-tasks/)
          * [Read the **Getting Started** guide](/documentation/getting-started)

          {::comment} Switch this to the ManageIQ PDF guides SOON
          * Much of the information in the downstream
          [Cloudforms 3.0 docs](https://access.redhat.com/site/documentation/en-US/CloudForms/)
          applies to ManageIQ.
          {:/comment}

      .col-md-4
        :markdown
          ### Join our community

          [Visit the **Community** section](/community/) to find out the best ways to communicate with the community, help make the software better, and learn how to participate in the development of ManageIQ itself!

          *[the community]: people who use and/or make the software


      .col-md-4
        :markdown
          ### Get support

          All the code produced in the ManageIQ project gets funneled into
          [Red Hat® CloudForms](https://redhat.com/products/cloud-computing/cloudforms/).
          If you're looking for a supported ManageIQ-based product, be sure to check it out.

%section#export.export-notice
  .row
    %section.col-md-12
      :markdown
        ## Export notice

        By downloading ManageIQ software, you acknowledge that you understand
        all of the following: ManageIQ software and technical information may be
        subject to the U.S. Export Administration Regulations (the “EAR”) and
        other U.S. and foreign laws and may not be exported, re-exported or
        transferred (a) to any country listed in Country Group E:1 in Supplement
        No. 1 to part 740 of the EAR (currently, Cuba, Iran, North Korea, Sudan
        &amp; Syria); (b) to any prohibited destination or to any end user who
        has been prohibited from participating in U.S. export transactions by
        any federal agency of the U.S. government; or (c) for use in connection
        with the design, development or production of nuclear, chemical or
        biological weapons, or rocket systems, space launch vehicles, or
        sounding rockets, or unmanned air vehicle systems. You may not download
        ManageIQ software or technical information if you are located in one of
        these countries or otherwise subject to these restrictions. You may not
        provide ManageIQ software or technical information to individuals or
        entities located in one of these countries or otherwise subject to these
        restrictions. You are also responsible for compliance with foreign law
        requirements applicable to the import, export and use of ManageIQ
        software and technical information.
